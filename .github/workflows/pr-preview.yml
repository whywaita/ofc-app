name: PR Preview Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  deployments: write
  pages: write
  id-token: write

jobs:
  build-preview:
    runs-on: ubuntu-latest
    environment:
      name: pr-preview-${{ github.event.pull_request.number }}
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Flutter
        uses: subosito/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e # v2.21.0
        with:
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: |
          cd app
          flutter pub get

      - name: Build Web for PR Preview
        run: |
          cd app
          # PR„Éó„É¨„Éì„É•„ÉºÁî®„ÅÆ„Éô„Éº„Çπ„Éë„Çπ„ÇíË®≠ÂÆö
          flutter build web --release --base-href "/${GITHUB_REPOSITORY#*/}/pr-preview/${{ github.event.pull_request.number }}/"

      - name: Upload preview artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr-preview-${{ github.event.pull_request.number }}
          path: app/build/web/
          retention-days: 7

      - name: Setup Pages for PR
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Upload to GitHub Pages artifact
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4.0.0
        with:
          path: 'app/build/web'
          name: github-pages-pr-${{ github.event.pull_request.number }}

      - name: Deploy to GitHub Pages Environment
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
        with:
          artifact_name: github-pages-pr-${{ github.event.pull_request.number }}

      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const runId = context.runId;
            const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${runId}`;

            const commentBody = `## üöÄ Preview Build Complete!\n\n` +
              `Your PR preview has been built successfully.\n\n` +
              `**Environment:** \`pr-preview-${prNumber}\`\n` +
              `**Build Artifact:** [View in Actions](${artifactUrl})\n` +
              `**Deployment URL:** ${{ steps.deployment.outputs.page_url }}\n\n` +
              `> üì¶ The build artifact can be downloaded from the Actions tab for local testing.\n\n` +
              `---\n` +
              `*This comment is automatically updated on each push to this PR.*`;

            // Êó¢Â≠ò„ÅÆ„Éó„É¨„Éì„É•„Éº„Ç≥„É°„É≥„Éà„ÇíÊé¢„Åô
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.data.find(comment =>
              comment.user?.type === 'Bot' &&
              comment.body?.includes('Preview Build Complete')
            );

            if (botComment) {
              // Êó¢Â≠ò„ÅÆ„Ç≥„É°„É≥„Éà„ÇíÊõ¥Êñ∞
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Êñ∞„Åó„ÅÑ„Ç≥„É°„É≥„Éà„Çí‰ΩúÊàê
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }